model Building {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  room      Room[]
}

model Facility {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Room      Room[]
}

model Room {
  id          Int        @id @default(autoincrement())
  name        String     @unique
  building    Building?  @relation(fields: [buildingId], references: [id])
  buildingId  Int
  floor       String
  capacityMax Int
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  facilities  Facility[]
  booking     Booking[]
}

model User {
  id        Int       @id @default(autoincrement())
  officerId Int       @unique
  firstName String
  lastName  String
  phone     String    @unique
  email     String    @unique
  userName  String    @unique
  password  String
  role      String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  booking   Booking[]
}

model OfficeHour1 {
  id        Int      @id @default(autoincrement())
  day       String   @unique
  isOpen    Boolean
  openTime  Int
  closeTime Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model OfficeHour2 {
  id                   Int      @id @default(autoincrement())
  isOpenMonday         Boolean
  openingTimeMonday    Int
  closingTimeMonday    Int
  isOpenTuesday        Boolean
  openingTimeTuesday   Int
  closingTimeTuesday   Int
  isOpenWednesday      Boolean
  openingTimeWednesday Int
  closingTimeWednesday Int
  isOpenThursday       Boolean
  openingTimeThursday  Int
  closingTimeThursday  Int
  isOpenFriday         Boolean
  openingTimeFriday    Int
  closingTimeFriday    Int
  isOpenSaturday       Boolean
  openingTimeSaturday  Int
  closingTimeSaturday  Int
  isOpenSunday         Boolean
  openingTimeSunday    Int
  closingTimeSunday    Int
  createdAt            DateTime @default(now())
  updatedAt            DateTime @updatedAt
}

model Booking {
  id            Int      @id @default(autoincrement())
  startDatetime DateTime
  endDatetime   DateTime
  room          Room?    @relation(fields: [roomId], references: [id])
  roomId        Int
  user          User?    @relation(fields: [userId], references: [id])
  userId        Int      @unique
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}
