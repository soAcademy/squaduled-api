model Building {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  room      Room[]
}

model Facility {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Room      Room[]
}

model Room {
  id          Int        @id @default(autoincrement())
  name        String     @unique
  building    Building?  @relation(fields: [buildingId], references: [id])
  buildingId  Int
  floor       String
  capacityMax String
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  facilities  Facility[]
  booking     Booking[]
}

model User {
  id        Int       @id @default(autoincrement())
  officerId String    @unique
  firstName String
  lastName  String
  phone     String    @unique
  email     String    @unique
  userName  String    @unique
  password  String
  role      String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  booking   Booking[]
}

model OfficeHour1 {
  id        Int      @id @default(autoincrement())
  day       String   @unique
  isOpen    Boolean
  openTime  Int
  closeTime Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model OfficeHour2 {
  id                    Int      @id @default(autoincrement())
  isOpenMonday          Boolean
  opentingTimeMonday    Int
  closingTimeMonday     Int
  isOpenTuesday         Boolean
  opentingTimeTuesday   Int
  closingTimeTuesday    Int
  isOpenWednesday       Boolean
  opentingTimeWednesday Int
  closingTimeWednesday  Int
  isOpenThursday        Boolean
  opentingTimeThursday  Int
  closingTimeThursday   Int
  isOpenFriday          Boolean
  opentingTimeFriday    Int
  closingTimeFriday     Int
  isOpenSaturday        Boolean
  opentingTimeSaturday  Int
  closingTimeSaturday   Int
  isOpenSunday          Boolean
  opentingTimeSunday    Int
  closingTimeSunday     Int
  createdAt             DateTime @default(now())
  updatedAt             DateTime @updatedAt
}

model Booking {
  id            Int      @id @default(autoincrement())
  startDatetime DateTime
  endDatetime   DateTime
  room          Room?    @relation(fields: [roomId], references: [id])
  roomId        Int
  user          User?    @relation(fields: [userId], references: [id])
  userId        Int      @unique
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}
